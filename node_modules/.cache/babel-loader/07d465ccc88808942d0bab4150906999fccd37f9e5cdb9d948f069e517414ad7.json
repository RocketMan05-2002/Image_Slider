{"ast":null,"code":"var _jsxFileName = \"/Users/rocketman/PC/CODING/Projects/03_react/03/src/components/13_Search Autocomplete/index.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SearchAutocomplete() {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const [users, setUsers] = useState([]);\n  const [errorMsg, setErrorMsg] = useState(null);\n  async function fetchUsers() {\n    try {\n      setLoading(true);\n      const response = await fetch('https://dummyjson.com/users');\n      const data = response.json();\n      if (data && data.users && data.users.length) {\n        setUsers(data.users);\n        setLoading(false);\n        setErrorMsg(null);\n      }\n    } catch (e) {\n      setErrorMsg(e.message);\n      setLoading(false);\n    }\n  }\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-autocomplete-container\",\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"search-users\",\n      placeholder: \"search users here\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n_s(SearchAutocomplete, \"dfxSRfZPEI9SbTZAkTkITchzCGc=\");\n_c = SearchAutocomplete;\nvar _c;\n$RefreshReg$(_c, \"SearchAutocomplete\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","SearchAutocomplete","_s","loading","setLoading","users","setUsers","errorMsg","setErrorMsg","fetchUsers","response","fetch","data","json","length","e","message","className","children","name","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/rocketman/PC/CODING/Projects/03_react/03/src/components/13_Search Autocomplete/index.js"],"sourcesContent":["import { useEffect, useState } from \"react\"\n\n\nexport default function SearchAutocomplete(){\n\n    const[loading,setLoading] = useState(false);\n    const[users, setUsers] = useState([]);\n    const[errorMsg,setErrorMsg] = useState(null);\n\n    async function fetchUsers() {\n        try{\n            setLoading(true);\n            const response = await fetch('https://dummyjson.com/users');\n            const data =response.json();\n            if(data && data.users && data.users.length){\n                setUsers(data.users);\n                setLoading(false);\n                setErrorMsg(null);\n            }\n        }catch(e){\n            setErrorMsg(e.message);\n            setLoading(false);\n        }\n    }\n\n    useEffect(()=>{\n        fetchUsers();\n    },[])\n\n    return (\n        <div className=\"search-autocomplete-container\">\n            <input\n            name=\"search-users\"\n            placeholder=\"search users here\"\n            />\n        </div>\n    )\n}"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAG3C,eAAe,SAASC,kBAAkBA,CAAA,EAAE;EAAAC,EAAA;EAExC,MAAK,CAACC,OAAO,EAACC,UAAU,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAK,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACrC,MAAK,CAACS,QAAQ,EAACC,WAAW,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAE5C,eAAeW,UAAUA,CAAA,EAAG;IACxB,IAAG;MACCL,UAAU,CAAC,IAAI,CAAC;MAChB,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,CAAC;MAC3D,MAAMC,IAAI,GAAEF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAC3B,IAAGD,IAAI,IAAIA,IAAI,CAACP,KAAK,IAAIO,IAAI,CAACP,KAAK,CAACS,MAAM,EAAC;QACvCR,QAAQ,CAACM,IAAI,CAACP,KAAK,CAAC;QACpBD,UAAU,CAAC,KAAK,CAAC;QACjBI,WAAW,CAAC,IAAI,CAAC;MACrB;IACJ,CAAC,QAAMO,CAAC,EAAC;MACLP,WAAW,CAACO,CAAC,CAACC,OAAO,CAAC;MACtBZ,UAAU,CAAC,KAAK,CAAC;IACrB;EACJ;EAEAP,SAAS,CAAC,MAAI;IACVY,UAAU,CAAC,CAAC;EAChB,CAAC,EAAC,EAAE,CAAC;EAEL,oBACIT,OAAA;IAAKiB,SAAS,EAAC,+BAA+B;IAAAC,QAAA,eAC1ClB,OAAA;MACAmB,IAAI,EAAC,cAAc;MACnBC,WAAW,EAAC;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd;AAACtB,EAAA,CAlCuBD,kBAAkB;AAAAwB,EAAA,GAAlBxB,kBAAkB;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}