{"ast":null,"code":"var _jsxFileName = \"/Users/rocketman/PC/CODING/Projects/03_react/03/src/components/00_practice/index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Practice = () => {\n  _s();\n  const [products, setProducts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [errorMsg, setErrorMsg] = useState(null);\n  async function fetchProducts() {\n    try {} catch (e) {}\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(Practice, \"u7ERGnOUTLgQLIFV1SeTnD0OW7A=\");\n_c = Practice;\nexport default Practice;\nvar _c;\n$RefreshReg$(_c, \"Practice\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Practice","_s","products","setProducts","loading","setLoading","errorMsg","setErrorMsg","fetchProducts","e","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/rocketman/PC/CODING/Projects/03_react/03/src/components/00_practice/index.js"],"sourcesContent":["import React, { useState } from 'react'\n\nconst Practice = () => {\n\n  const[products,setProducts] = useState([]);\n  const[loading,setLoading] = useState(false);\n  const[errorMsg, setErrorMsg] = useState(null);\n\n  async function fetchProducts(){\n    try{\n\n    }catch(e){\n\n    }\n  }\n\n  return (\n    <div>\n      \n    </div>\n  )\n}\n\nexport default Practice\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAErB,MAAK,CAACC,QAAQ,EAACC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAK,CAACO,OAAO,EAACC,UAAU,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAK,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAE7C,eAAeW,aAAaA,CAAA,EAAE;IAC5B,IAAG,CAEH,CAAC,QAAMC,CAAC,EAAC,CAET;EACF;EAEA,oBACEV,OAAA;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEK,CAAC;AAEV,CAAC;AAAAZ,EAAA,CAnBKD,QAAQ;AAAAc,EAAA,GAARd,QAAQ;AAqBd,eAAeA,QAAQ;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}