{"ast":null,"code":"var _jsxFileName = \"/Users/rocketman/PC/CODING/Projects/03_react/03/src/components/00_practice/index.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './xyz.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Practice = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [errorMsg, setErrorMsg] = useState(null);\n  const [scrollpercentage, setScrollPercentage] = useState(0);\n  async function fetchData() {\n    try {\n      setLoading(true);\n      const response = await fetch('https://dummyjson.com/products?limit=100');\n      const data = await response.json();\n      if (data && data.products && data.products.length) {\n        setData(data.products);\n        setLoading(false);\n      }\n    } catch (e) {\n      setErrorMsg(e.message);\n      setLoading(false);\n    }\n  }\n  useEffect(() => {\n    fetchData();\n  }, []);\n  useEffect(() => {\n    window.addEventListener('scroll', handleScrollPercentage);\n    return () => {\n      window.removeEventListener('scroll', () => {});\n    };\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading .. please wait\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 12\n    }, this);\n  }\n  if (errorMsg) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", errorMsg]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Custom Scroll Indicator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scroll-progress-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"current-progress-bar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"data-container\",\n      children: data && data.length ? data.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"product\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this)) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(Practice, \"XpgjRcCrqDl1QdKNWSFEWf4u6vI=\");\n_c = Practice;\nexport default Practice;\nvar _c;\n$RefreshReg$(_c, \"Practice\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Practice","_s","data","setData","loading","setLoading","errorMsg","setErrorMsg","scrollpercentage","setScrollPercentage","fetchData","response","fetch","json","products","length","e","message","window","addEventListener","handleScrollPercentage","removeEventListener","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","item","title","_c","$RefreshReg$"],"sources":["/Users/rocketman/PC/CODING/Projects/03_react/03/src/components/00_practice/index.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport './xyz.css'\n\n\nconst Practice = () => {\n\n  const[data,setData] = useState([]);\n  const[loading,setLoading]=useState(false);\n  const[errorMsg,setErrorMsg] = useState(null);\n  const[scrollpercentage,setScrollPercentage] = useState(0);\n\n  async function fetchData() {\n    try{\n      setLoading(true);\n      const response = await fetch('https://dummyjson.com/products?limit=100');\n      const data = await response.json();\n      if(data && data.products && data.products.length){\n        setData(data.products);\n        setLoading(false);\n      }\n    }catch(e){\n      setErrorMsg(e.message);\n      setLoading(false);\n    }\n  }\n\n  useEffect(()=>{\n    fetchData();\n  },[])\n\n  useEffect(()=>{\n    window.addEventListener('scroll',handleScrollPercentage);\n    return () =>{\n      window.removeEventListener('scroll',()=>{});\n    }\n  },[])\n\n  if(loading){\n    return <div>Loading .. please wait</div>\n  }\n  if(errorMsg){\n    return <div>Error: {errorMsg}</div>\n  }\n\n  return (\n    <div className='container'>\n        <div className='top-container'>\n            <h1>Custom Scroll Indicator</h1>\n            <div className='scroll-progress-container'>\n                <div className='current-progress-bar'>\n                </div>    \n            </div>\n        </div>\n        <div className='data-container'>\n          {\n            data && data.length ?\n            data.map((item)=>\n            <div className='product'><p>{item.title}</p></div>\n            )\n            :null\n          }\n        </div>    \n    </div>\n  )\n}\n\nexport default Practice\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}